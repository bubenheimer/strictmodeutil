/*
 * Copyright (c) 2015-2020 Uli Bubenheimer
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

buildscript {
    ext.kotlin_version = '1.9.0'

    repositories {
        mavenLocal()
        google()
        gradlePluginPortal()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group = 'org.bubenheimer'
version = '1.0-SNAPSHOT'

ext {
    minSdkVersion = 24
    compileSdkVersion = 34
    targetSdkVersion = 34
    javaVersion = "11"
}

subprojects {
    buildscript {
        repositories {
            mavenLocal()
            google()
        }
    }

    repositories {
        mavenLocal()
        google()
        mavenCentral()
    }

    apply plugin: 'com.android.library'
    apply plugin: 'maven-publish'
    apply plugin: 'kotlin-android'

    group = rootProject.group
    version = rootProject.version

    android {
        compileSdk rootProject.ext.compileSdkVersion

        defaultConfig {
            minSdkVersion rootProject.ext.minSdkVersion
            targetSdkVersion rootProject.ext.targetSdkVersion
            versionName version
        }

        buildTypes {
            debug {
            }
            release {
                shrinkResources false
                debuggable false
                jniDebuggable false
                renderscriptDebuggable false
            }
        }

        compileOptions {
            sourceCompatibility javaVersion
            targetCompatibility javaVersion
        }

        kotlinOptions {
            jvmTarget = javaVersion
            freeCompilerArgs = [
                    "-progressive",
                    "-Xexplicit-api=strict",
                    "-Xjvm-default=all"
            ]
        }

        buildFeatures {
            buildConfig false
        }

        publishing {
            multipleVariants {
                allVariants()
                withSourcesJar()
            }
        }

        lint {
            quiet false
            abortOnError false
            checkReleaseBuilds true
            ignoreWarnings false
            absolutePaths true
            checkAllWarnings true
            warningsAsErrors true
            // if true, don't include source code lines in the error output
            noLines false
            // if true, show all locations for an error, do not truncate lists, etc.
            showAll true
            // whether lint should include full issue explanations in the text error output
            explainIssues true
            textReport false
            xmlReport false
            htmlReport true
            // optional path to HTML report (default will be lint-results.html in the builddir)
            //htmlOutput file("$reportsDir/lint-report.html")
            checkTestSources true
            ignoreTestSources false
            checkGeneratedSources false
            checkDependencies false
        }
    }

    publishing {
        publications {
            library(MavenPublication) {
                afterEvaluate {
                    from components.default
                }
            }
        }
    }
}
